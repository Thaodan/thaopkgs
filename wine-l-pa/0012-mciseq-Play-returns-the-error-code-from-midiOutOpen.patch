From 563e825e3fe661ef6c9979826ce8444bd3820c71 Mon Sep 17 00:00:00 2001
From: =?utf-8?q?J=C3=B6rg=20H=C3=B6hle?= <hoehle@users.sourceforge.net>
Date: Fri, 21 Sep 2012 16:51:53 +0200
Subject: [PATCH 12/25] mciseq: Play returns the error code from midiOutOpen.

---
 dlls/mciseq/mcimidi.c |   19 ++++++++++++++-----
 1 files changed, 14 insertions(+), 5 deletions(-)

diff --git a/dlls/mciseq/mcimidi.c b/dlls/mciseq/mcimidi.c
index 4e66719..c538ac0 100644
--- a/dlls/mciseq/mcimidi.c
+++ b/dlls/mciseq/mcimidi.c
@@ -863,6 +863,13 @@ static DWORD MIDI_player(WINE_MCIMIDI* wmm, DWORD dwFlags)
     HANDLE		oldcb = NULL;
     BOOLEAN		startedPlaying = FALSE;
 
+    dwRet = midiOutOpen((LPHMIDIOUT)&wmm->hMidi, wmm->wPort, 0L, 0L, CALLBACK_NULL);
+    if (dwRet != MMSYSERR_NOERROR) {
+	InterlockedExchangePointer(&wmm->hCallback, NULL);
+	return mmr2mci(dwRet);
+    }
+    SetEvent(wmm->hEvent);
+
     /* init tracks */
     for (nt = 0; nt < wmm->nTracks; nt++) {
 	mmt = &wmm->tracks[nt];
@@ -877,11 +884,6 @@ static DWORD MIDI_player(WINE_MCIMIDI* wmm, DWORD dwFlags)
 	MIDI_mciReadNextEvent(wmm, mmt); /* FIXME == 0 */
     }
 
-    dwRet = midiOutOpen((LPHMIDIOUT)&wmm->hMidi, wmm->wPort, 0L, 0L, CALLBACK_NULL);
-    if (dwRet != MMSYSERR_NOERROR) {
-	return mmr2mci(dwRet);
-    }
-
     wmm->dwPulse = 0;
     wmm->dwTempo = 500000;
     wmm->dwPositionMS = 0;
@@ -1153,8 +1155,15 @@ static DWORD ensurePlayerThread(WINE_MCIMIDI* wmm)
 	if (!wmm->hThread) {
 	    dwRet = MCIERR_OUT_OF_MEMORY;
 	} else {
+	    HANDLE events[2] = {wmm->hEvent, wmm->hThread};
+
 	    SetThreadPriority(wmm->hThread, THREAD_PRIORITY_TIME_CRITICAL);
 	    dwRet = 0;
+	    /* no dead-lock since either midiOutOpen returns an error or hEvent is set
+	     * (or the thread crashes). */
+	    if (WaitForMultipleObjects(2, events, FALSE, INFINITE) == WAIT_OBJECT_0+1) {
+		GetExitCodeThread(wmm->hThread, &dwRet);
+	    }
 	}
 	if (dwRet)
 	    wmm->dwStatus = MCI_MODE_STOP;
-- 
1.5.6.3

