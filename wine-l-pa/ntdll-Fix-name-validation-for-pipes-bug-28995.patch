diff --git a/dlls/ntdll/directory.c b/dlls/ntdll/directory.c
index c8fff6b..d690367 100644
--- a/dlls/ntdll/directory.c
+++ b/dlls/ntdll/directory.c
@@ -2898,6 +2898,7 @@ NTSTATUS CDECL wine_nt_to_unix_file_name( const UNICODE_STRING *nameW, ANSI_STRI
                                           UINT disposition, BOOLEAN check_case )
 {
     static const WCHAR unixW[] = {'u','n','i','x'};
+    static const WCHAR pipeW[] = {'p','i','p','e'};
     static const WCHAR invalid_charsW[] = { INVALID_NT_CHARS, 0 };
 
     NTSTATUS status = STATUS_SUCCESS;
@@ -2908,6 +2909,7 @@ NTSTATUS CDECL wine_nt_to_unix_file_name( const UNICODE_STRING *nameW, ANSI_STRI
     int pos, ret, name_len, unix_len, prefix_len, used_default;
     WCHAR prefix[MAX_DIR_ENTRY_LEN];
     BOOLEAN is_unix = FALSE;
+    BOOLEAN is_pipe = FALSE;
 
     name     = nameW->Buffer;
     name_len = nameW->Length / sizeof(WCHAR);
@@ -2939,14 +2941,20 @@ NTSTATUS CDECL wine_nt_to_unix_file_name( const UNICODE_STRING *nameW, ANSI_STRI
     name += prefix_len;
     name_len -= prefix_len;
 
-    /* check for invalid characters (all chars except 0 are valid for unix) */
+    /* check for invalid characters (all chars except 0 are valid for unix and pipes) */
     is_unix = (prefix_len == 4 && !memcmp( prefix, unixW, sizeof(unixW) ));
+    is_pipe = (prefix_len == 4 && !memcmp( prefix, pipeW, sizeof(pipeW) ));
     if (is_unix)
     {
         for (p = name; p < name + name_len; p++)
             if (!*p) return STATUS_OBJECT_NAME_INVALID;
         check_case = TRUE;
     }
+    else if (is_pipe)
+    {
+        for (p = name; p < name + name_len; p++)
+            if (!*p) return STATUS_OBJECT_NAME_INVALID;
+    }
     else
     {
         for (p = name; p < name + name_len; p++)
diff --git a/dlls/ntdll/tests/pipe.c b/dlls/ntdll/tests/pipe.c
index 3ab4d07..0de077e 100644
--- a/dlls/ntdll/tests/pipe.c
+++ b/dlls/ntdll/tests/pipe.c
@@ -98,9 +98,9 @@ static BOOL init_func_ptrs(void)
 }
 
 static const WCHAR testpipe[] = { '\\', '\\', '.', '\\', 'p', 'i', 'p', 'e', '\\',
-                                  't', 'e', 's', 't', 'p', 'i', 'p', 'e', 0 };
+                                  't', 'e', 's', 't', 'p', 'i', 'p', 'e', '>', 0 };
 static const WCHAR testpipe_nt[] = { '\\', '?', '?', '\\', 'p', 'i', 'p', 'e', '\\',
-                                     't', 'e', 's', 't', 'p', 'i', 'p', 'e', 0 };
+                                     't', 'e', 's', 't', 'p', 'i', 'p', 'e', '>', 0 };
 
 static NTSTATUS create_pipe(PHANDLE handle, ULONG sharing, ULONG options)
 {
