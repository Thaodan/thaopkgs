--- wine-1.3.24/dlls/ntdll/directory.c.old	2011-07-29 12:26:33.974460044 -0700
+++ wine-1.3.24/dlls/ntdll/directory.c	2011-07-29 12:28:25.225460178 -0700
@@ -1104,7 +1104,7 @@
 
     LPCWSTR p, ext, end = name->Buffer + name->Length / sizeof(WCHAR);
     LPWSTR dst;
-    unsigned short hash;
+    unsigned int hash;
     int i;
 
     /* Compute the hash code of the file name */
@@ -1112,8 +1112,8 @@
     /* insert a better algorithm here... */
     if (!is_case_sensitive)
     {
-        for (p = name->Buffer, hash = 0xbeef; p < end - 1; p++)
-            hash = (hash<<3) ^ (hash>>5) ^ tolowerW(*p) ^ (tolowerW(p[1]) << 8);
+        for (p = name->Buffer, hash = 0xbeef; p < end - 2; p++)
+            hash = (hash<<3) ^ (hash>>5) ^ tolowerW(*p) ^ (tolowerW(p[1]) << 8) ^ (tolowerW(p[2]) << 16);
         hash = (hash<<3) ^ (hash>>5) ^ tolowerW(*p); /* Last character */
     }
     else
@@ -1126,16 +1126,17 @@
     /* Find last dot for start of the extension */
     for (p = name->Buffer + 1, ext = NULL; p < end - 1; p++) if (*p == '.') ext = p;
 
-    /* Copy first 4 chars, replacing invalid chars with '_' */
-    for (i = 4, p = name->Buffer, dst = buffer; i > 0; i--, p++)
+    /* Copy first 3 chars, replacing invalid chars with '_' */
+    for (i = 3, p = name->Buffer, dst = buffer; i > 0; i--, p++)
     {
         if (p == end || p == ext) break;
         *dst++ = is_invalid_dos_char(*p) ? '_' : toupperW(*p);
     }
-    /* Pad to 5 chars with '~' */
+    /* Pad to 4 chars with '~' */
     while (i-- >= 0) *dst++ = '~';
 
     /* Insert hash code converted to 3 ASCII chars */
+    *dst++ = hash_chars[(hash >> 15) & 0x1f];
     *dst++ = hash_chars[(hash >> 10) & 0x1f];
     *dst++ = hash_chars[(hash >> 5) & 0x1f];
     *dst++ = hash_chars[hash & 0x1f];
